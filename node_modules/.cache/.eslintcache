[{"/home/sanbega/calcudora/src/index.js":"1","/home/sanbega/calcudora/src/App.js":"2","/home/sanbega/calcudora/src/reportWebVitals.js":"3"},{"size":500,"mtime":1643320932223,"results":"4","hashOfConfig":"5"},{"size":2665,"mtime":1643336426422,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1643320932227,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k7s0sa",{"filePath":"10","messages":"11","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sanbega/calcudora/src/index.js",[],"/home/sanbega/calcudora/src/App.js",["15"],"import './App.css';\nimport React,{useState} from \"react\"\n\nfunction App() {\n  const [num1, setNum1] = useState(\"\");\n  const [num2, setNum2] = useState(\"\");\n  const [currentOperation, setCurrentOperation] = useState(\"\");\n  const [result, setResult] = useState(0);  \n\n\n  function allClear() {\n    setNum1(\"\");\n    setNum2(\"\");\n    setCurrentOperation(\"\");\n    setResult(\"\");\n  }\n\n  function clickNumber(val) {\n    if (currentOperation === \"\") {\n      setNum1(num1 + val) \n    }else{\n      setNum2(num2 + val)\n    }\n  }\n  function clickOperation(val) {\n    setCurrentOperation(val)\n  }\n  function getResult() {\n    switch (currentOperation) {\n      case \"+\":\n          setResult(Number(num1) + Number(num2));\n      break;\n      case \"-\":\n          setResult(Number(num1) - Number(num2));\n      break;\n      case \"*\":\n          setResult(Number(num1) * Number(num2));\n      break;\n      case \"/\":\n          setResult(Number(num1) / Number(num2));\n      break;\n    }\n    \n  }\n\n  return (\n    <header></header>\n    <div className=\"App\">\n      <div className=\"calculator-grid\">\n        <div className=\"output\">\n          <div className=\"previous-operand\">{currentOperation ? num1 + currentOperation : \"\"}</div>\n          <div className=\"corrent-operand\">{result ? result : (!currentOperation ? num1 : num2)}</div>\n        </div>\n        <button onclic={() => {clickNumber(\".\")}}className=\"same\">1</button>\n        <button onclic={() => {clickNumber(0)}}className=\"same\">1</button>\n        <button onclic={() => {clickNumber(1)}}className=\"same\">1</button>\n        <button onclic={() => {clickNumber(2)}}className=\"same\">2</button>\n        <button onclic={() => {clickNumber(3)}}className=\"same\">3</button>\n        <button onclic={() => {clickNumber(4)}}className=\"same\">4</button>\n        <button onclic={() => {clickNumber(5)}}className=\"same\">5</button>\n        <button onclic={() => {clickNumber(6)}}className=\"same\">6</button>\n        <button onclic={() => {clickNumber(7)}}className=\"same\">7</button>\n        <button onclic={() => {clickNumber(8)}}className=\"same\">8</button>\n        <button onclic={() => {clickNumber(9)}}className=\"same\">9</button>\n        <button onclic={allClear}className=\"spant-two\">C</button>\n        <button onclic={() => {clickOperation(\"+\")}}className=\"signos\">+</button>\n        <button onclic={() => {clickOperation(\"-\")}}className=\"signos\">-</button>\n        <button onclic={() => {clickOperation(\"*\")}}className=\"signos\">*</button>\n        <button onclic={() => {clickOperation(\"/\")}}className=\"signos\">/</button>\n        <button onclic={getResult}className=\"same\">=</button>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/sanbega/calcudora/src/reportWebVitals.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"16","line":48,"column":4},"Parsing error: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>? (48:4)"]